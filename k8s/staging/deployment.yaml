apiVersion: apps/v1
kind: Deployment
metadata:
  name: urlshortener-api
  namespace: staging
  labels:
    app: urlshortener-api
    environment: staging
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: urlshortener-api
  template:
    metadata:
      labels:
        app: urlshortener-api
        environment: staging
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: api
        image: PLACEHOLDER_IMAGE
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: DATABASE_HOST
          value: "postgres-service.staging.svc.cluster.local"
        - name: DATABASE_PORT
          value: "5432"
        - name: DATABASE_NAME
          value: "urlshortener_staging"
        - name: DATABASE_USER
          value: "staging_user"
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: staging-secrets
              key: DATABASE_PASSWORD
        - name: REDIS_HOST
          value: "redis-service.staging.svc.cluster.local"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: staging-secrets
              key: REDIS_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: staging-secrets
              key: JWT_SECRET
        - name: ENVIRONMENT
          value: "staging"
        - name: BASE_URL
          value: "https://staging.short.ly"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: urlshortener-service
  namespace: staging
  labels:
    app: urlshortener-api
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
  selector:
    app: urlshortener-api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: urlshortener-ingress
  namespace: staging
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - staging.short.ly
    secretName: staging-tls
  rules:
  - host: staging.short.ly
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: urlshortener-service
            port:
              number: 80